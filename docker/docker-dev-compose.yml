include:
  - environment-compose.yml

services:
  config-server:
    build:
      context: ../
      dockerfile: ./config-server/Dockerfile
    container_name: config-server
    restart: unless-stopped
    env_file:
      - .env
    environment:
      CONFIG_SERVER_URL: http://config-server:8888
    ports:
      - "8888:8888"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8888/application/default/main" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      liquibase-migrations:
        condition: service_completed_successfully
      postgresql:
        condition: service_healthy

    networks:
      - backend
  registry:
    build:
      context: ../
      dockerfile: ./eureka-server/Dockerfile
    container_name: eureka-server
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "8761:8761"
    environment:
      EUREKA_SERVER_URL: http://registry:8761/eureka/
    depends_on:
      config-server:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - backend

  auth-service:
    build:
      context: ../
      dockerfile: ./auth-service/Dockerfile
    container_name: auth-service
    restart: unless-stopped
    env_file:
      - .env
    environment:
      AUTH_SERVICE_URL: http://auth-service:8082
    ports:
      - "8082:8082"
    depends_on:
      registry:
        condition: service_healthy
    networks:
      - backend

  user-service:
    build:
      context: ../
      dockerfile: ./user-service/Dockerfile
    container_name: user-service
    restart: unless-stopped
    env_file:
      - .env
    environment:
      USER_SERVICE_URL: http://user-service:8084
    ports:
      - "8084:8084"
    depends_on:
      registry:
        condition: service_healthy
    networks:
      - backend

  api-gateway:
    build:
      context: ../
      dockerfile: ./api-gateway/Dockerfile
    container_name: api-gateway
    restart: unless-stopped
    env_file:
      - .env
    environment:
      API_GATEWAY_URL: http://api-gateway:8765
    ports:
      - "8765:8765"
    depends_on:
      registry:
        condition: service_healthy
      auth-service:
        condition: service_started
      user-service:
        condition: service_started
    networks:
      - backend