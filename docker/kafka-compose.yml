services:
  kafka:
    image: &kafka-image bitnami/kafka:3.8
    ports:
      - '9094:9094'
    container_name: kafka
    networks:
      - app-tier
    environment:
      # KRaft settings
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      # Listeners
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://:9092,EXTERNAL://localhost:9094
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      # Clustering
      KAFKA_CFG_NUM_PARTITIONS: 1
    volumes:
      - kafka_data:/bitnami/kafka
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--bootstrap-server=localhost:9092", "--list" ]
      start_period: 15s
      interval: 10s

  init-kafka:
    image: *kafka-image
    container_name: init-kafka
    networks:
      - app-tier
    working_dir: /opt/bitnami/kafka/bin
    entrypoint: /bin/bash
    depends_on:
      kafka:
        condition: service_healthy
    command: |
      -c "
      kafka-topics.sh --create --if-not-exists --topic message-topic --bootstrap-server kafka:9092
      kafka-topics.sh --describe --bootstrap-server kafka:9092
      "

volumes:
  kafka_data:
    driver: local

networks:
  app-tier:
    driver: bridge